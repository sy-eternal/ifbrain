var TableAdvanced = function () {

    var initTable1 = function () {
        var table = $('#sample_1');

        /* Table tools samples: https://www.datatables.net/release-datatables/extras/TableTools/ */

        /* Set tabletools buttons and button container */

        $.extend(true, $.fn.DataTable.TableTools.classes, {
            "container": "btn-group tabletools-dropdown-on-portlet",
            "buttons": {
                "normal": "btn btn-sm default",
                "disabled": "btn btn-sm default disabled"
            },
            "collection": {
                "container": "DTTT_dropdown dropdown-menu tabletools-dropdown-menu"
            }
        });

        var oTable = table.dataTable({

            // Internationalisation. For more info refer to http://datatables.net/manual/i18n
            "language": {
                "aria": {
                    "sortAscending": ": activate to sort column ascending",
                    "sortDescending": ": activate to sort column descending"
                },
                "emptyTable": "No data available in table",
                "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                "infoEmpty": "No entries found",
                "infoFiltered": "(filtered1 from _MAX_ total entries)",
                "lengthMenu": "Show _MENU_ entries",
                "search": "Search:",
                "zeroRecords": "No matching records found"
            },

            // Or you can use remote translation file
            //"language": {
            //   url: '//cdn.datatables.net/plug-ins/3cfcc339e89/i18n/Portuguese.json'
            //},

            "order": [
                [0, 'asc']
            ],
            
            "lengthMenu": [
                [5, 15, 20, -1],
                [5, 15, 20, "All"] // change per page values here
            ],
            // set the initial value
            "pageLength": 10,

            "dom": "<'row' <'col-md-12'T>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>", // horizobtal scrollable datatable

            // Uncomment below line("dom" parameter) to fix the dropdown overflow issue in the datatable cells. The default datatable layout
            // setup uses scrollable div(table-scrollable) with overflow:auto to enable vertical scroll(see: assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.js). 
            // So when dropdowns used the scrollable div should be removed. 
            //"dom": "<'row' <'col-md-12'T>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r>t<'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>",

            "tableTools": {
                "sSwfPath": "../../assets/global/plugins/datatables/extensions/TableTools/swf/copy_csv_xls_pdf.swf",
                "aButtons": [{
                    "sExtends": "pdf",
                    "sButtonText": "PDF"
                }, {
                    "sExtends": "csv",
                    "sButtonText": "CSV"
                }, {
                    "sExtends": "xls",
                    "sButtonText": "Excel"
                }, {
                    "sExtends": "print",
                    "sButtonText": "Print",
                    "sInfo": 'Please press "CTR+P" to print or "ESC" to quit',
                    "sMessage": "Generated by DataTables"
                }]
            }
        });

        var tableWrapper = $('#sample_1_wrapper'); // datatable creates the table wrapper by adding with id {your_table_jd}_wrapper

        tableWrapper.find('.dataTables_length select').select2(); // initialize select2 dropdown
    }

    var initTable2 = function () {
        var table = $('#sample_2');

        /* Table tools samples: https://www.datatables.net/release-datatables/extras/TableTools/ */

        /* Set tabletools buttons and button container */

        $.extend(true, $.fn.DataTable.TableTools.classes, {
            "container": "btn-group tabletools-btn-group pull-right",
            "buttons": {
                "normal": "btn btn-sm default",
                "disabled": "btn btn-sm default disabled"
            }
        });

        var oTable = table.dataTable({

            // Internationalisation. For more info refer to http://datatables.net/manual/i18n
            "language": {
                "aria": {
                    "sortAscending": ": activate to sort column ascending",
                    "sortDescending": ": activate to sort column descending"
                },
                "emptyTable": "No data available in table",
                "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                "infoEmpty": "No entries found",
                "infoFiltered": "(filtered1 from _MAX_ total entries)",
                "lengthMenu": "Show _MENU_ entries",
                "search": "Search:",
                "zeroRecords": "No matching records found"
            },

            "order": [
                [0, 'asc']
            ],
            "lengthMenu": [
                [5, 15, 20, -1],
                [5, 15, 20, "All"] // change per page values here
            ],

            // set the initial value
            "pageLength": 10,
            "dom": "<'row' <'col-md-12'T>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>", // horizobtal scrollable datatable

            // Uncomment below line("dom" parameter) to fix the dropdown overflow issue in the datatable cells. The default datatable layout
            // setup uses scrollable div(table-scrollable) with overflow:auto to enable vertical scroll(see: assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.js). 
            // So when dropdowns used the scrollable div should be removed. 
            //"dom": "<'row' <'col-md-12'T>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r>t<'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>",

            "tableTools": {
                "sSwfPath": "../../assets/global/plugins/datatables/extensions/TableTools/swf/copy_csv_xls_pdf.swf",
                "aButtons": [{
                    "sExtends": "pdf",
                    "sButtonText": "PDF"
                }, {
                    "sExtends": "csv",
                    "sButtonText": "CSV"
                }, {
                    "sExtends": "xls",
                    "sButtonText": "Excel"
                }, {
                    "sExtends": "print",
                    "sButtonText": "Print",
                    "sInfo": 'Please press "CTRL+P" to print or "ESC" to quit',
                    "sMessage": "Generated by DataTables"
                }, {
                    "sExtends": "copy",
                    "sButtonText": "Copy"
                }]
            }
        });

        var tableWrapper = $('#sample_2_wrapper'); // datatable creates the table wrapper by adding with id {your_table_jd}_wrapper
        tableWrapper.find('.dataTables_length select').select2(); // initialize select2 dropdown
    }

    var initTable3 = function () {
        var table = $('#sample_3');

        /* Formatting function for row details */
        function fnFormatDetails(oTable, nTr) {
            var aData = oTable.fnGetData(nTr);
            var sOut = '<table>';
            sOut += '<tr><td>Platform(s):</td><td>' + aData[2] + '</td></tr>';
            sOut += '<tr><td>Engine version:</td><td>' + aData[3] + '</td></tr>';
            sOut += '<tr><td>CSS grade:</td><td>' + aData[4] + '</td></tr>';
            sOut += '<tr><td>Others:</td><td>Could provide a link here</td></tr>';
            sOut += '</table>';

            return sOut;
        }

        /*
         * Insert a 'details' column to the table
         */
        var nCloneTh = document.createElement('th');
        nCloneTh.className = "table-checkbox";

        var nCloneTd = document.createElement('td');
        nCloneTd.innerHTML = '<span class="row-details row-details-close"></span>';

        table.find('thead tr').each(function () {
            this.insertBefore(nCloneTh, this.childNodes[0]);
        });

        table.find('tbody tr').each(function () {
            this.insertBefore(nCloneTd.cloneNode(true), this.childNodes[0]);
        });

        /*
         * Initialize DataTables, with no sorting on the 'details' column
         */
        var oTable = table.dataTable({

            // Internationalisation. For more info refer to http://datatables.net/manual/i18n
            "language": {
                "aria": {
                    "sortAscending": ": activate to sort column ascending",
                    "sortDescending": ": activate to sort column descending"
                },
                "emptyTable": "No data available in table",
                "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                "infoEmpty": "No entries found",
                "infoFiltered": "(filtered1 from _MAX_ total entries)",
                "lengthMenu": "Show _MENU_ entries",
                "search": "Search:",
                "zeroRecords": "No matching records found"
            },

            "columnDefs": [{
                "orderable": false,
                "targets": [0]
            }],
            "order": [
                [1, 'asc']
            ],
            "lengthMenu": [
                [5, 15, 20, -1],
                [5, 15, 20, "All"] // change per page values here
            ],
            // set the initial value
            "pageLength": 10,
        });
        var tableWrapper = $('#sample_3_wrapper'); // datatable creates the table wrapper by adding with id {your_table_jd}_wrapper

        tableWrapper.find('.dataTables_length select').select2(); // initialize select2 dropdown

        /* Add event listener for opening and closing details
         * Note that the indicator for showing which row is open is not controlled by DataTables,
         * rather it is done here
         */
        table.on('click', ' tbody td .row-details', function () {
            var nTr = $(this).parents('tr')[0];
            if (oTable.fnIsOpen(nTr)) {
                /* This row is already open - close it */
                $(this).addClass("row-details-close").removeClass("row-details-open");
                oTable.fnClose(nTr);
            } else {
                /* Open this row */
                $(this).addClass("row-details-open").removeClass("row-details-close");
                oTable.fnOpen(nTr, fnFormatDetails(oTable, nTr), 'details');
            }
        });
     
        
    }


    var initTable10 =function(){
        var table = $('#sample_10');

        /* Formatting function for row details */
        function fnFormatDetails(oTable, nTr) {
            var aData = oTable.fnGetData(nTr);
            var sOut = '<table>';
            sOut += '<tr><td>包含项目:</td><td>' + aData[1] + '</td></tr>';
            sOut += '</table>';

            return sOut;
        }

        /*
         * Insert a 'details' column to the table
         */
        var nCloneTh = document.createElement('th');
        nCloneTh.className = "table-checkbox";

        var nCloneTd = document.createElement('td');
        nCloneTd.innerHTML = '<span class="row-details row-details-close"></span>';

        table.find('thead tr').each(function () {
            this.insertBefore(nCloneTh, this.childNodes[0]);
        });

        table.find('tbody tr').each(function () {
            this.insertBefore(nCloneTd.cloneNode(true), this.childNodes[0]);
        });

        /*
         * Initialize DataTables, with no sorting on the 'details' column
         */
        var oTable = table.dataTable({

            // Internationalisation. For more info refer to http://datatables.net/manual/i18n
            "language": {
                "aria": {
                    "sortAscending": ": activate to sort column ascending",
                    "sortDescending": ": activate to sort column descending"
                },
                "emptyTable": "No data available in table",
                "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                "infoEmpty": "No entries found",
                "infoFiltered": "(filtered1 from _MAX_ total entries)",
                "lengthMenu": "Show _MENU_ entries",
                "search": "Search:",
                "zeroRecords": "No matching records found"
            },

            "columnDefs": [{
                "orderable": false,
                "targets": [0]
            }],
            "order": [
                [1, 'asc']
            ],
            "lengthMenu": [
                [5, 15, 20, -1],
                [5, 15, 20, "All"] // change per page values here
            ],
            // set the initial value
            "pageLength": 10,
        });
        var tableWrapper = $('#sample_3_wrapper'); // datatable creates the table wrapper by adding with id {your_table_jd}_wrapper

        tableWrapper.find('.dataTables_length select').select2(); // initialize select2 dropdown

        /* Add event listener for opening and closing details
         * Note that the indicator for showing which row is open is not controlled by DataTables,
         * rather it is done here
         */
        table.on('click', ' tbody td .row-details', function () {
            var nTr = $(this).parents('tr')[0];
            if (oTable.fnIsOpen(nTr)) {
                /* This row is already open - close it */
                $(this).addClass("row-details-close").removeClass("row-details-open");
                oTable.fnClose(nTr);
            } else {
                /* Open this row */
                $(this).addClass("row-details-open").removeClass("row-details-close");
                oTable.fnOpen(nTr, fnFormatDetails(oTable, nTr), 'details');
            }
        });
     
        
    }
    
    
    
    var initTable4 = function () {
        var table = $('#sample_4');
        
        
        //选中航班插入数据
        function Insert(oTable, nTr) {
        	
        	//获得修改的飞机id
        	var filghtPlanId=$('#filghtPlanId').val();
        	
        	//获得日期规划id
        	var datePlanId=$('#datePlanId').val();
        	//获得人数
            var peopleNum=$('#peopleNum').val();
            //获得人员类型
            var peopleType=$('#peopleType').val();
            //获得航程类型
            var flightType=$('#flightType').val();
            //获得供应商价格ID
            var priceCoefficientID=$('#priceCoefficientID').val();
            var aData = oTable.fnGetData(nTr);
            //获得单价
            var costPrice=aData[2];
            costPrice = costPrice.replace("<input type=\"text\" style=\"border-style:none\" readonly=\"readonly\" value=\"","");
            costPrice = costPrice.replace("\">","");
            
            
            var startA="";
            var arriA="";
           
            //出发机场代码
            var startAirport=aData[12];
            startAirport=startAirport.replace("<input type=\"text\" style=\"border-style:none\" value=\"","");
            startAirport=startAirport.replace("\">","");
            //到达机场代码
            var arriveAirport=aData[13];
            arriveAirport=arriveAirport.replace("<input type=\"text\" style=\"border-style:none\" value=\"","");
            arriveAirport=arriveAirport.replace("\">","");
            
            
          //出发日期
             var date=aData[6];
             date = date.replace("<input type=\"text\" style=\"border-style:none\" value=\"","");
             date = date.replace("\">","");
           var startDate=date.substr(0,10);
           //出发时间
           var startTime=date.substr(11,5);
           
         //到达日期
           var arrivedate=aData[7];
           arrivedate = arrivedate.replace("<input type=\"text\" style=\"border-style:none\" value=\"","");
           arrivedate = arrivedate.replace("\">","");
           
           var endDate=arrivedate.substr(0,10);
           //到达时间
           var endTime=arrivedate.substr(11,5);
           
           //经停次数
           var lengthSeg=aData[9];
           lengthSeg = lengthSeg.replace("<input type=\"text\" style=\"border-style:none\" value=\"","");
           lengthSeg = lengthSeg.replace("\">","");
           //出发城市
            var departCity=aData[17];
            departCity=departCity.replace("<input type=\"text\" style=\"border-style:none\" value=\"","");
            departCity=departCity.replace("\">","");
           //到达城市
           var arriveCity=aData[18];
           arriveCity=arriveCity.replace("<input type=\"text\" style=\"border-style:none\" value=\"","");
           arriveCity=arriveCity.replace("\">","");
           
           
           //添加航程   -------------------------------------------------------------------------------------------------------------------------------------------------------------
           //总飞行时间
           var flyTime=aData[8];
           flyTime = flyTime.replace("<input type=\"text\" style=\"border-style:none\" value=\"","");
           flyTime = flyTime.replace("\">","");
           //航空公司代码
           var airline=aData[16];
           airline = airline.replace("<input type=\"text\" style=\"border-style:none\" value=\"","");
           airline = airline.replace("\">","");
           var flightPlan={
        		   datePlanId:datePlanId,
        		   lengthSeg:lengthSeg,
        		   priceCoefficientID:priceCoefficientID,
        		   peopleNum:peopleNum,
        		   peopleType:peopleType,
        		   startDate:startDate,
        		   startTime:startTime,
        		   startAirport:startAirport,
        		   arriveAirport:arriveAirport,
        		   endDate:endDate,
        		   endTime:endTime,
        		   flyTime:flyTime,
        		   airline:airline,
        		   flightType:flightType,
        		   costPrice:costPrice
           }
           var flyplanStr=JSON.stringify(flightPlan);
           var summary = aData[15];
           summary = summary.replace(/\&quot;/g,"\"");
           summary = summary.replace("<input type=\"text\" style=\"border-style:none\" value=\"","");
           summary = summary.replace("\">","");
           var summary2 = eval('(' + summary + ')');
            //经停次数
        	var times=summary2.length-1;
        	 //出发机场所在城市
        	var DepartureCity="";
       //到达机场所在城市
             var 	ArrivalCity="";
             var flighdetailArray = new Array();
            for (var i =0;i< summary2.length;i++) {
            	//出发机场
            	var DepartureAirport=summary2[i].stopDepartureAirport;
            	//到达机场
            	var stopArrivalAirport=summary2[i].stopArrivalAirport;
            	$.ajax({
    			    type: "Post",
    			    async: false,
    			    url: "/cityactive/findByAirPortCode?DepartureAirport="+DepartureAirport+"&stopArrivalAirport="+stopArrivalAirport,
    			    success: function (data) {
    			    	console.log(data);
    			        cityname=eval('(' + data + ')');
    			        //出发城市
    			        DepartureCitycityname=cityname.DepartureName;
    			        //到达城市
    			        ArrivalCity=cityname.ArrivalName;
    			    }
    			});
            	//出发日期
            	var stopDepartureDate=summary2[i].stopDepartureDateTime.substr(0,10);
            	//出发时间
            	var stopDepartureTime=summary2[i].stopDepartureDateTime.substr(11,5);
            	//到达日期
            	var stopArrivalDate=summary2[i].stopArrivalDateTime.substr(0,10);
                //到达时间
            	var stopArrivalDateTime=summary2[i].stopArrivalDateTime.substr(11,5);
            	
            	//出发航站楼
            	var departureTerminalId=summary2[i].departureTerminalId;
            	//到达机场
            	var stopArrivalAirport=summary2[i].stopArrivalAirport;
            	//到达航站
            	var arrivalTerminalId=summary2[i].arrivalTerminalId;
            	//航班号
            	var stopFlightNumber=summary2[i].stopFlightNumber;
            	//级别
            	var stopCabin=summary2[i].stopCabin;
            	//飞行时间
            	var stopElapsedTime=summary2[i].stopElapsedTime;
            	//停留时间
            	 if (i < summary2.length -1) {
                  var stopMin=summary2[i].stopMin;
                 }
            	//机型
            	 var stopEquipType=summary2[i].stopEquipType;
            	 
            	var flightdetail={
            			stopDepartureDate:stopDepartureDate,
            			stopDepartureTime:stopDepartureTime,
            			stopArrivalDate:stopArrivalDate,
            			stopArrivalDateTime:stopArrivalDateTime,
            			ArrivalCity:ArrivalCity,
            			DepartureAirport:DepartureAirport,
            			stopArrivalAirport:stopArrivalAirport,
            			departureTerminalId:departureTerminalId,
            			arrivalTerminalId:arrivalTerminalId,
            			stopFlightNumber:stopFlightNumber,
            			stopCabin:stopCabin,
            			stopElapsedTime:stopElapsedTime,
            			stopMin:stopMin,
            			stopEquipType:stopEquipType
            	} 
            	  var flightdetailStr=JSON.stringify(flightdetail);
            	flighdetailArray.push(flightdetail);
            }
        var flighdetailArrayStr=JSON.stringify(flighdetailArray);
        //把数据传到后台
    	$.ajax({
		    type: "Post",
		    async: false,
		    url: "/flight/add?flyplanStr="+flyplanStr+"&flighdetailArray="+flighdetailArrayStr+"&datePlanId="+datePlanId+"&filghtPlanId="+filghtPlanId,
		    success: function (data) {
		    	 $.unblockUI();
		    	var obj=eval('(' + data + ')');
		    	var result=obj.result;
		    	alert(result);
		    	window.location.href=Web.contextPath +"/order/" +obj.orderId + "/plan?_step1";
		    }
		});
   
        
     
   	  	
      
}
        
        
        
        
        
        
        
        
        

        /* Formatting function for row expanded details */
        function fnFormatDetails(oTable, nTr) {
            var aData = oTable.fnGetData(nTr);
            var summary = aData[15];
            summary = summary.replace(/\&quot;/g,"\"");
            summary = summary.replace("<input type=\"text\" style=\"border-style:none\" value=\"","");
            summary = summary.replace("\">","");
            var summary2 = eval('(' + summary + ')');
            
            var times="";

       	 //出发机场所在城市
       	var DepartureCity="";
      //到达机场所在城市
            var 	ArrivalCity=""; 
            var cityArray=new Array();
           var sOut = '<table>';
           
      /*  for (var i =0;i< summary2.length;i++) {
           //出发机场
           	var DepartureAirport=summary2[i].stopDepartureAirport;
        //到达机场
           	var stopArrivalAirport=summary2[i].stopArrivalAirport;
         
                //返回的数据
                var cityname="";
       		$.ajax({
   			    type: "Post",
   			    async: false,
   			    url: "/cityactive/findByAirPortCode?DepartureAirport="+DepartureAirport+"&stopArrivalAirport="+stopArrivalAirport,
   			    success: function (data) {
   			    	console.log(data);
   			    	
   			        cityname=eval('(' + data + ')');
   			        
   			        cityArray.push(cityname.DepartureName);
   			        
   			        alert("DepartureCity"+cityname.DepartureName);
   			        
   			        
   			        cityArray.push(cityname.ArrivalName);
   			        
   			        
   			        alert("ArrivalCity"+cityname.ArrivalName);
   			    }
   			});
           
           }*/
            //经停次数
            
        	 times=summary2.length-1;
        	 
        	 if(times==0){
        		 times="直达"
        	 }
        	 sOut += '<tr><td>经停次数:</td><td>'+  times  + '</td></tr>';
        	  for (var i =0;i< summary2.length;i++) {
              	
             	 //出发机场
             	var DepartureAirport=summary2[i].stopDepartureAirport;
          //到达机场
             	var stopArrivalAirport=summary2[i].stopArrivalAirport;
             	$.ajax({
     			    type: "Post",
     			    async: false,
     			    url: "/cityactive/findByAirPortCode?DepartureAirport="+DepartureAirport+"&stopArrivalAirport="+stopArrivalAirport,
     			    success: function (data) {
     			    	console.log(data);
     			        cityname=eval('(' + data + ')');
     			        DepartureCitycityname=cityname.DepartureName;
     			        ArrivalCity=cityname.ArrivalName;
     			    }
     			});
             sOut += '<tr><td>航班号:</td><td>' + summary2[i].stopFlightNumber  + '</td>';
             sOut += '<td>机型:</td><td>'+ summary2[i].stopEquipType +'</td>';
             sOut += '<td>飞行时间：</td><td>'+ summary2[i].stopElapsedTime +'</td>';
             sOut += '<td>舱位：</td><td>'+summary2[i].stopCabin+'</td></tr>';
             sOut += '<tr><td>出发城市:</td><td>'  + summary2[i].stopDepartureAirport +  '</td>';
             sOut += '<td>出发机场:</td><td>'+summary2[i].stopDepartureAirport+'</td>';
             sOut += '<td>航站楼:</td><td>'+summary2[i].departureTerminalId+'</td></tr>';
             sOut += '<tr><td>到达城市:</td><td>'+summary2[i].stopArrivalAirport+'</td>';
             sOut +='<td>到达机场：</td><td>'+ summary2[i].stopArrivalAirport +'<td>';
             sOut +='<td>航站楼：</td><td>'+ summary2[i].arrivalTerminalId +'<td></tr>';
             sOut +='<tr><td>出发时间:</td><td>'+summary2[i].stopDepartureDateTime+'</td>';
             sOut += '<td>到达时间：</td><td>'+summary2[i].stopArrivalDateTime+'</td></tr>';
             if (i < summary2.length -1) {
                 sOut +='<tr><td>&nbsp;</td></tr>'
                 sOut += '<tr><td>停留时间:</td><td>' + summary2[i].stopMin + '</td></tr>';
             }
             }
             sOut += '</table>';
           
            return sOut;
        }

        /*
         * Insert a 'details' column to the table
         */
        var nCloneTh = document.createElement('th');
        nCloneTh.className = "table-checkbox";
        
        var nCloneTd = document.createElement('td');
        nCloneTd.innerHTML = '<span class="row-details row-details-close"></span>';

        table.find('thead tr').each(function () {
            this.insertBefore(nCloneTh, this.childNodes[0]);
        });

        table.find('tbody tr').each(function () {
            this.insertBefore(nCloneTd.cloneNode(true), this.childNodes[0]);
        });

        var oTable = table.dataTable({

            // Internationalisation. For more info refer to http://datatables.net/manual/i18n
            "language": {
                "aria": {
                    "sortAscending": ": activate to sort column ascending",
                    "sortDescending": ": activate to sort column descending"
                },
                "emptyTable": "No data available in table",
                "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                "infoEmpty": "No entries found",
                "infoFiltered": "(filtered1 from _MAX_ total entries)",
                "lengthMenu": "Show _MENU_ entries",
                "search": "Search:",
                "zeroRecords": "No matching records found"
            },

            "columnDefs": [{
                "orderable": false,
                "targets": [0]
            }],
            "order": [
                [1, 'asc']
            ],
            "lengthMenu": [
                [5, 15, 20, -1],
                [5, 15, 20, "All"] // change per page values here
            ],
            // set the initial value
            "pageLength": 10,
        });

        var tableWrapper = $('#sample_4_wrapper'); // datatable creates the table wrapper by adding with id {your_table_jd}_wrapper
        var tableColumnToggler = $('#sample_4_column_toggler');

        /* modify datatable control inputs */
        tableWrapper.find('.dataTables_length select').select2(); // initialize select2 dropdown

        /* Add event listener for opening and closing details
         * Note that the indicator for showing which row is open is not controlled by DataTables,
         * rather it is done here
         */
        table.on('click', ' tbody td .row-details', function () {
            var nTr = $(this).parents('tr')[0];
            if (oTable.fnIsOpen(nTr)) {
                /* This row is already open - close it */
                $(this).addClass("row-details-close").removeClass("row-details-open");
                oTable.fnClose(nTr);
            } else {
                /* Open this row */
                $(this).addClass("row-details-open").removeClass("row-details-close");
                oTable.fnOpen(nTr, fnFormatDetails(oTable, nTr), 'details');
            }
        });
        
        
        table.on('click', ' tbody tr .btn', function () {
        	var nTr = $(this).parents('tr')[0];
            if (oTable.fnIsOpen(nTr)) {
                /* This row is already open - close it */
                $(this).addClass("row-details-close").removeClass("row-details-open");
                oTable.fnClose(nTr);
            } else {
                /* Open this row */
                $(this).addClass("row-details-open").removeClass("row-details-close");
                oTable.fnOpen(nTr, Insert(oTable, nTr), 'details');
            }
        });

        /* handle show/hide columns*/
        $('input[type="checkbox"]', tableColumnToggler).change(function () {
            /* Get the DataTables object again - this is not a recreation, just a get of the object */
            var iCol = parseInt($(this).attr("data-column"));
            var bVis = oTable.fnSettings().aoColumns[iCol].bVisible;
            oTable.fnSetColumnVis(iCol, (bVis ? false : true));
        });
    }

    

    
    
    
    
    
    var initTable5 = function () {

        var table = $('#sample_5');

        /* Fixed header extension: http://datatables.net/extensions/scroller/ */

        var oTable = table.dataTable({
            "dom": "<'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r>t<'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>", // datatable layout without  horizobtal scroll
            "scrollY": "300",
            "deferRender": true,
            "order": [
                [0, 'asc']
            ],
            "lengthMenu": [
                [5, 15, 20, -1],
                [5, 15, 20, "All"] // change per page values here
            ],
            "pageLength": 10 // set the initial value            
        });


        var tableWrapper = $('#sample_5_wrapper'); // datatable creates the table wrapper by adding with id {your_table_jd}_wrapper
        tableWrapper.find('.dataTables_length select').select2(); // initialize select2 dropdown
    }

    var initTable6 = function () {

        var table = $('#sample_6');

        /* Fixed header extension: http://datatables.net/extensions/keytable/ */

        var oTable = table.dataTable({
            // Internationalisation. For more info refer to http://datatables.net/manual/i18n
            "language": {
                "aria": {
                    "sortAscending": ": activate to sort column ascending",
                    "sortDescending": ": activate to sort column descending"
                },
                "emptyTable": "No data available in table",
                "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                "infoEmpty": "No entries found",
                "infoFiltered": "(filtered1 from _MAX_ total entries)",
                "lengthMenu": "Show _MENU_ entries",
                "search": "Search:",
                "zeroRecords": "No matching records found"
            },
            "order": [
                [0, 'asc']
            ],
            "lengthMenu": [
                [5, 15, 20, -1],
                [5, 15, 20, "All"] // change per page values here
            ],
            "pageLength": 10, // set the initial value,
            "columnDefs": [{  // set default column settings
                'orderable': false,
                'targets': [0]
            }, {
                "searchable": false,
                "targets": [0]
            }],
            "order": [
                [1, "asc"]
            ]           
        });

        var oTableColReorder = new $.fn.dataTable.ColReorder( oTable );

        var tableWrapper = $('#sample_6_wrapper'); // datatable creates the table wrapper by adding with id {your_table_jd}_wrapper
        tableWrapper.find('.dataTables_length select').select2(); // initialize select2 dropdown
    }

    return {

        //main function to initiate the module
        init: function () {

            if (!jQuery().dataTable) {
                return;
            }

            console.log('me 1');

            initTable1();
            initTable2();
            initTable3();
            initTable10();
            initTable4();
            initTable5();
            initTable6();
          
            console.log('me 2');
        }

    };

}();

var myfunc = function(){
	   
	   alert("ccc");
    var nTr = $(this).parents('tr')[0];
    
    alert(nTr);

	   
}
 
 